"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7304],{3905:function(t,e,a){a.d(e,{Zo:function(){return d},kt:function(){return k}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),s=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=s(t.components);return n.createElement(o.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,d=p(t,["components","mdxType","originalType","parentName"]),u=s(a),k=r,c=u["".concat(o,".").concat(k)]||u[k]||m[k]||l;return a?n.createElement(c,i(i({ref:e},d),{},{components:a})):n.createElement(c,i({ref:e},d))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6869:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return d},default:function(){return u}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],p={sidebar_position:9,id:"javascriptmethods"},o="Methods",s={unversionedId:"javascriptmethods",id:"version-JavaScript SDK 6.0.0/javascriptmethods",title:"Methods",description:"Initialize",source:"@site/javascript_versioned_docs/version-JavaScript SDK 6.0.0/javascriptmethods.md",sourceDirName:".",slug:"/javascriptmethods",permalink:"/doc/javascript/JavaScript SDK 6.0.0/javascriptmethods",tags:[],version:"JavaScript SDK 6.0.0",sidebarPosition:9,frontMatter:{sidebar_position:9,id:"javascriptmethods"},sidebar:"version-JavaScript SDK 6.0.0/tutorialSidebar",previous:{title:"Integration Tips",permalink:"/doc/javascript/JavaScript SDK 6.0.0/javascriptintegrationtips"},next:{title:"Objects",permalink:"/doc/javascript/JavaScript SDK 6.0.0/javascriptobjects"}},d=[{value:"Initialize",id:"1",children:[],level:2},{value:"Connect",id:"2",children:[],level:2},{value:"Disconnect",id:"3",children:[],level:2},{value:"Sale",id:"4",children:[],level:2},{value:"Sale And Tokenization",id:"5",children:[],level:2},{value:"Transaction Recovery",id:"6",children:[],level:2},{value:"Stop Listening Device",id:"7",children:[],level:2},{value:"Sale Reversal",id:"8",children:[],level:2},{value:"Refund",id:"9",children:[],level:2},{value:"Refund Reversal",id:"10",children:[],level:2},{value:"Tokenize Card",id:"11",children:[],level:2},{value:"Card Pan",id:"12",children:[],level:2},{value:"Stop Current Transaction",id:"13",children:[],level:2},{value:"Print Receipt",id:"14",children:[],level:2},{value:"Ping Device",id:"15",children:[],level:2},{value:"Update",id:"16",children:[],level:2}],m={toc:d};function u(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"methods"},"Methods"),(0,l.kt)("h2",{id:"1"},"Initialize"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Initialize")),(0,l.kt)("p",null,"Initializes the JavaScript SDK and returns the list of payment terminals associated with the account."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"API_key")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The Actor API key.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"dev_or_prod_environment")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"  ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"Value that defines if the actor is targeting a development (true -> cloud.handpoint.io) or production (false -> cloud.handpoint.com) environment.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"recovery_EoT_callback")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"  ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"promise")),(0,l.kt)("td",{parentName:"tr",align:null},"Promise that collects the pending transaction results that couldn't be delivered to the POS during the execution of the transaction, for example if the network connection became unstable. The callback input parameter is a TransactionResult object. When the promise is resolved the JS SDK will send the ACK to the payment terminal to mark the result as recovered and the device will delete it from its storage. If the promise is rejected, the device will resend the TransactionResult until the promise is correctly resolved and the ACK sent to the reader. The sdk has a 5 second window for the promise to be resolved")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.init('API KEY', true, (pendingEoT) => {\n console.log('Recovered Transaction -> ' + JSON.stringify(pendingEoT);\n return handleTransactionResultPromise(pendingEoT);\n})\n \n// For simple or sync operations you may just return a resolved Promise. \nHandpoint.init('API KEY', true, (pendingEoT) => {\n console.log('Recovered Transaction -> ' + JSON.stringify(pendingEoT);\n return Promise.resolve();\n})\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Devices")),(0,l.kt)("td",{parentName:"tr",align:null},"List of Device objects")))),(0,l.kt)("h2",{id:"2"},"Connect"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Connect")),(0,l.kt)("p",null,"Connect the JavaScript SDK to a payment terminal."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"device_name")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The target payment terminal to connect to. The device_name is returned in the Device object of the init call.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.connect('1234263-TYPE1');\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Connection Result")),(0,l.kt)("td",{parentName:"tr",align:null},"- ",(0,l.kt)("strong",{parentName:"td"},"200")," code for OK ",(0,l.kt)("br",null)," - ",(0,l.kt)("strong",{parentName:"td"},"403")," code for NOK")))),(0,l.kt)("h2",{id:"3"},"Disconnect"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Disconnect")),(0,l.kt)("p",null,"Connect the JavaScript SDK to a payment terminal."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"device_name")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The target payment terminal to disconnect from. The device_name is returned in the Device object of the init call.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.connect('1234263-TYPE1');\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Connection Result")),(0,l.kt)("td",{parentName:"tr",align:null},"- ",(0,l.kt)("inlineCode",{parentName:"td"},"Disconnected")," message for OK ",(0,l.kt)("br",null)," - ",(0,l.kt)("inlineCode",{parentName:"td"},"ERROR disconnecting")," message for NOK")))),(0,l.kt)("h2",{id:"4"},"Sale"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Sale")),(0,l.kt)("p",null,"A sale initiates a payment operation to the card reader. In its simplest form, you only have to pass the amount and currency as parameters."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"integer")),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of funds to charge - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Currency of the charge")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"saleOptions")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("a",{parentName:"td",href:"/doc/javascript/JavaScript%20SDK%206.0.0/javascriptobjects#23"},(0,l.kt)("em",{parentName:"a"},"SaleOptions"))),(0,l.kt)("td",{parentName:"tr",align:null},"An object to store all the customisation options for a sale. This object can be empty if no options are required.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"callback_function ")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'var [*SaleOptions*](#23)  = {\n    customerReference: "MyCustomReference",\n    tipConfiguration: {\n        baseAmount: "100",\n        skipEnabled: true,\n        enterAmountEnabled: true,\n        tipPercentages: [\n            1,\n            2,\n            3,\n            5\n        ]\n    },\n    bypassOptions: {\n        signatureBypass: true,\n        pinBypass: true\n    },\n    merchantAuth: [\n        {\n            acquirer: "ACQUIRER",\n            mid: "11111",\n            tid: "22222",\n            mcc: "33333"\n        }\n    ],\n}\n\nHandpoint.sale(\'1000\', \'USD\', [*SaleOptions*](#23) , function (stat) {\n  console.log(\'Transaction Status received -> \'+ stat.message) \n});\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Sale Response")),(0,l.kt)("td",{parentName:"tr",align:null},"A Financial Response object")))),(0,l.kt)("h2",{id:"5"},"Sale And Tokenization"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"SaleAndTokenization")),(0,l.kt)("p",null,"A sale which both authorizes the transaction and returns a token representing the card. This feature is not available for all acquirers. Please check with Handpoint to know if tokenization is supported for your acquirer of choice."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"integer")),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of funds to charge - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Currency of the charge")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"saleOptions")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null)," ",(0,l.kt)("a",{parentName:"td",href:"/doc/javascript/JavaScript%20SDK%206.0.0/javascriptobjects#23"},(0,l.kt)("em",{parentName:"a"},"SaleOptions"))),(0,l.kt)("td",{parentName:"tr",align:null},"An object to store all the customisation options for a sale. This object can be empty if no options are required.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'var [*SaleOptions*](#23)  = {\n    customerReference: "MyCustomReference",\n    tipConfiguration: {\n        baseAmount: "100",\n        skipEnabled: true,\n        enterAmountEnabled: true,\n        tipPercentages: [\n            1,\n            2,\n            3,\n            5\n        ]\n    },\n    bypassOptions: {\n        signatureBypass: true,\n        pinBypass: true\n    },\n    merchantAuth: [\n        {\n            acquirer: "ACQUIRER",\n            mid: "11111",\n            tid: "22222",\n            mcc: "33333"\n        }\n    ],\n}\n\nHandpoint.saleAndTokenization(\'1000\', \'USD\', [*SaleOptions*](#23) , CallbackFunction(stat){...});\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Sale and Tokenization Response")),(0,l.kt)("td",{parentName:"tr",align:null},"A Financial Response object")))),(0,l.kt)("h2",{id:"6"},"Transaction Recovery"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"StartRecovery")),(0,l.kt)("p",null,"The terminal has a transaction recovery loop to automatically send back the pending ",(0,l.kt)("a",{parentName:"p",href:"/doc/javascript/JavaScript%20SDK%206.0.0/javascriptobjects#18"},(0,l.kt)("em",{parentName:"a"},"Transaction Result"))," to the Point of sale in case it becomes unreachable (network issue or other)."),(0,l.kt)("p",null,"For the first 100 seconds after a transaction is completed, a background thread will attempt to deliver the result every 5 seconds. If the point of sale is still unreachable after the first 100 seconds, the retry loop turns into an exponential increment to the power of 2 (8s-16s-32s etc\u2026)."),(0,l.kt)("p",null,"The recovery loop is reinitialized every time the Handpoint application is restarted or the startRecovery method is triggered.The ",(0,l.kt)("a",{parentName:"p",href:"/doc/javascript/JavaScript%20SDK%206.0.0/javascriptobjects#18"},(0,l.kt)("em",{parentName:"a"},"Transaction Result"))," received through the transaction recovery loop will have the recoveredTransaction field set to true"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Important information: The point of sale must be successfully connected to a terminal in order to receive the pending transactions.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"//Start recovery of pending transactions \nHandpoint.startRecovery();\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Promise Successful Response")),(0,l.kt)("td",{parentName:"tr",align:null},"The event has been sent to the device")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Promise Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},"The event was not sent to the terminal because it is unreachable")))),(0,l.kt)("h2",{id:"7"},"Stop Listening Device"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"StopListeningDevice")),(0,l.kt)("p",null,"This operation interrupts the connection, stops listening to transaction events and resets the connection with the device"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"//Stop Listening to Events \nHandpoint.stopListeningDevice();\n")),(0,l.kt)("h2",{id:"8"},"Sale Reversal"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"SaleReversal")),(0,l.kt)("p",null,"A sale Reversal, also called sale VOID allows the user to reverse a previous sale operation. This operation reverts (if possible) a specific sale identified with a transaction id. In its simplest form, you only have to pass the amount, currency and originalTransactionID as parameters\t"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"integer")),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of funds to charge - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Currency of the charge")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The transaction id of the original sale authorization")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"merchantAuthOptions")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("a",{parentName:"td",href:"/doc/javascript/JavaScript%20SDK%206.0.0/javascriptobjects#25"},(0,l.kt)("em",{parentName:"a"},"MerchantAuthOptions"))),(0,l.kt)("td",{parentName:"tr",align:null},"An object to store all the customisation options for a saleReversal. This object can be empty if no options are required.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'var saleReversalOptions = {\n    customerReference: "MyCustomReference",\n    merchantAuth: [\n        {\n            acquirer: "ACQUIRER",\n            mid: "11111",\n            tid: "22222",\n            mcc: "33333"\n        }\n    ],\n}\n\nHandpoint.saleReversal(\'1000\', \'USD\', \'OriginalSaleGUID\', saleReversalOptions, CallbackFunction(stat){...});\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Sale Reversal Response")),(0,l.kt)("td",{parentName:"tr",align:null},"A Financial Response object")))),(0,l.kt)("h2",{id:"9"},"Refund"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Refund")),(0,l.kt)("p",null,"A refund initiates a refund operation to the payment terminal. This operation moves funds from the merchant account to the cardholder\xb4s credit card. In its simplest form, you only have to pass the amount and currency as parameters. For Interac (Canadian Debit Network), refunds can only be processed until Interac closes the batch of transactions at night."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"integer")),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of funds to charge - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Currency of the charge")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The transaction id of the original sale authorization")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"refundOptions")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("a",{parentName:"td",href:"/doc/javascript/JavaScript%20SDK%206.0.0/javascriptobjects#24"},(0,l.kt)("em",{parentName:"a"},"RefundOptions"))),(0,l.kt)("td",{parentName:"tr",align:null},"An object to store all the customisation options for a saleReversal. This object can be empty if no options are required.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"var refundOptions = {\n    customerReference: \"MyCustomReference\",\n    bypassOptions: {\n        signatureBypass: true,\n        pinBypass: true\n    },\n    merchantAuth: [\n        {\n            acquirer: \"ACQUIRER\",\n            mid: \"11111\",\n            tid: \"22222\",\n            mcc: \"33333\"\n        }\n    ],\n}\n\nHandpoint.refund('1000', 'USD', undefined ,refundOptions, CallbackFunction(stat){...});\n\n// Linked Refund\nHandpoint.refund('1000', 'USD', 'OriginalSaleGUID' ,refundOptions, CallbackFunction(stat){...});\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Refund Response")),(0,l.kt)("td",{parentName:"tr",align:null},"A Financial Response object")))),(0,l.kt)("h2",{id:"10"},"Refund Reversal"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"RefundReversal")),(0,l.kt)("p",null,"A Refund Reversal, also called Refund VOID, allows the merchant to reverse a previous refund operation. This operation reverts (if possible) a specific refund identified with a transaction id. In its simplest form, you only have to pass the amount, currency and originalTransactionID as parameters."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"integer")),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of funds to charge - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Currency of the charge")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The transaction id of the original sale authorization")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"merchantAuthOptions")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("a",{parentName:"td",href:"/doc/javascript/JavaScript%20SDK%206.0.0/javascriptobjects#25"},(0,l.kt)("em",{parentName:"a"},"MerchantAuthOptions"))),(0,l.kt)("td",{parentName:"tr",align:null},"An object to store all the customisation options for a refundReversal. This object can be empty if no options are required.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"var refundOptions = {\n    customerReference: \"MyCustomReference\",\n    bypassOptions: {\n        signatureBypass: true,\n        pinBypass: true\n    },\n    merchantAuth: [\n        {\n            acquirer: \"ACQUIRER\",\n            mid: \"11111\",\n            tid: \"22222\",\n            mcc: \"33333\"\n        }\n    ],\n}\n\nHandpoint.refund('1000', 'USD', undefined ,refundOptions, CallbackFunction(stat){...});\n\n// Linked Refund\nHandpoint.refund('1000', 'USD', 'OriginalSaleGUID' ,refundOptions, CallbackFunction(stat){...});\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Refund Reversal Response")),(0,l.kt)("td",{parentName:"tr",align:null},"A Financial Response object")))),(0,l.kt)("h2",{id:"11"},"Tokenize Card"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"TokenizeCard")),(0,l.kt)("p",null,"Returns a token for the card. This feature is not available for all acquirers. Please check with Handpoint to know if tokenization is supported for your acquirer of choice"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"options")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("a",{parentName:"td",href:"/doc/javascript/JavaScript%20SDK%206.0.0/javascriptobjects#26"},(0,l.kt)("em",{parentName:"a"},"Options"))),(0,l.kt)("td",{parentName:"tr",align:null},"An object to store all the customisation options for a tokenizeCard. This object can be empty if no options are required.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'var options = {\n    customerReference: "MyCustomReference",\n}\n\nHandpoint.tokenizeCard(options, CallbackFunction(stat){...});\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Tokenize Card Response")),(0,l.kt)("td",{parentName:"tr",align:null},"A Financial Response object")))),(0,l.kt)("h2",{id:"12"},"Card Pan"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"CardPan")),(0,l.kt)("p",null,"A cardPan request will return the full PAN of the card being swiped, dipped or tapped. Only the PANs of whitelisted card ranges will be returned by the Handpoint systems. This operation is mostly used to be able to process funds or points from loyalty cards."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"options")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("a",{parentName:"td",href:"/doc/javascript/JavaScript%20SDK%206.0.0/javascriptobjects#26"},(0,l.kt)("em",{parentName:"a"},"Options"))),(0,l.kt)("td",{parentName:"tr",align:null},"An object to store all the customisation options for a tokenizeCard. This object can be empty if no options are required.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'var options = {\n    customerReference: "MyCustomReference",\n}\n\nHandpoint.tokenizeCard(options, CallbackFunction(stat){...});\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Card Pan Response")),(0,l.kt)("td",{parentName:"tr",align:null},"A Financial Response object")))),(0,l.kt)("h2",{id:"13"},"Stop Current Transaction"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"StopCurrentTransaction")),(0,l.kt)("p",null,"Operation used to stop the current transaction. The transaction can only be stopped at specific stages of a payment processing, for example a transaction can not be stopped when the card is being read but can be stopped when waiting for the cardholder to initially insert a card."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.stopCurrentTransaction();\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Promise Successful Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"{finStatus: CANCELLED, statusMessage: 'Operation stopped'}"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Promise Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"{finStatus: FAILED, errorMessage: 'Unable to stop current transaction'}"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Promise Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"{ finStatus: FAILED, errorMessage: 'No response received from the card reader' }"))))),(0,l.kt)("h2",{id:"14"},"Print Receipt"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"PrintReceipt")),(0,l.kt)("p",null,"This method sends the merchant or customer receipt to the terminal for printing. The format of the HTML data, passed to the method or stored in the url, must follow this format: Html Print Format."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.printReceipt('https://location_of_receipt_container.com/receipt_location', CallbackFunction(stat){...});\n\nvar htmlReceipt = '[...] HTML receipt [...]'\n\nHandpoint.printReceipt(htmlReceipt, CallbackFunction(stat){...});\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"receipt")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"HTML receipt or url to locate the receipt, it can be found in the response of a financial operation, in the fields merchantReceipt or customerReceipt")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Print Receipt Response")),(0,l.kt)("td",{parentName:"tr",align:null},"A specific Status object that describes the printing action (PrinterOutOfPaper, ErrorConnectingToPrinter or ReceiptPrintSuccess)")))),(0,l.kt)("h2",{id:"15"},"Ping Device"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"PingDevice")),(0,l.kt)("p",null,"This operation will ping the terminal to confirm if it is online. The promise is correctly resolved if the device is online and successfully answers to the ping"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.pingDevice(CallbackFunction(stat){...});\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Device Status")),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("a",{parentName:"td",href:"/doc/javascript/JavaScript%20SDK%206.0.0/javascriptobjects#27"},(0,l.kt)("em",{parentName:"a"},"Device Status"))," object")))),(0,l.kt)("h2",{id:"16"},"Update"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Update")),(0,l.kt)("p",null,"Triggers a terminal software and config update"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.update(CallbackFunction(stat){...});\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,l.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Update Response")),(0,l.kt)("td",{parentName:"tr",align:null},"A Financial Response object")))))}u.isMDXComponent=!0}}]);